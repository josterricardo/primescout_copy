# Generated by Django 3.1.2 on 2021-04-19 05:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(default='NO DATA', max_length=500)),
                ('url', models.SlugField(max_length=500, unique=True)),
                ('sku', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReviewDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('qualification', models.FloatField()),
                ('comment', models.TextField()),
                ('review_date', models.DateField()),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scout_monitor.product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total_qualification', models.FloatField()),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='scout_monitor.product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('normal_price', models.FloatField()),
                ('daily_price', models.FloatField()),
                ('special_price', models.FloatField(default=0.0)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scout_monitor.product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('img', models.ImageField(upload_to='')),
                ('img_url', models.SlugField(max_length=300)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scout_monitor.product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NeveraProductDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meta_details', models.TextField(default='{}')),
                ('brand', models.CharField(default='NO DATA', max_length=500)),
                ('reference', models.CharField(default='NO DATA', max_length=500)),
                ('frosting_technology', models.CharField(default='NO DATA', max_length=500)),
                ('net_litre_capacity', models.CharField(default='NO DATA', max_length=500)),
                ('litre_capacity', models.CharField(default='NO DATA', max_length=500)),
                ('water_dispenser', models.CharField(default='NO DATA', max_length=500)),
                ('water_dispenser_type', models.CharField(default='NO DATA', max_length=500)),
                ('panel_control_type', models.CharField(default='NO DATA', max_length=500)),
                ('panel_control_localization', models.CharField(default='NO DATA', max_length=500)),
                ('door_amount', models.CharField(default='NO DATA', max_length=500)),
                ('trays_material', models.CharField(default='NO DATA', max_length=500)),
                ('dimensions', models.CharField(max_length=300)),
                ('inverter', models.CharField(default='NO DATA', max_length=500)),
                ('compressor_type', models.CharField(default='NO DATA', max_length=500)),
                ('ice_maker', models.CharField(default='NO DATA', max_length=500)),
                ('ice_maker_type', models.CharField(default='NO DATA', max_length=500)),
                ('gama_color', models.CharField(default='NO DATA', max_length=500)),
                ('voltage', models.CharField(default='NO DATA', max_length=500)),
                ('min_energy_consumption', models.CharField(default='NO DATA', max_length=500)),
                ('power_efficiency', models.CharField(default='NO DATA', max_length=500)),
                ('warranty', models.CharField(default='NO DATA', max_length=500)),
                ('compressor_warranty', models.CharField(default='NO DATA', max_length=500)),
                ('contact', models.CharField(default='NO DATA', max_length=500)),
                ('other_details', models.TextField(default='')),
                ('tips', models.TextField(default='')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='scout_monitor.product')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
